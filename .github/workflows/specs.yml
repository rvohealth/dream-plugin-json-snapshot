name: Specs
on:
  pull_request:
    branches:
      - main

jobs:
  linting:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: dream
          POSTGRES_DB: dream_core_test
          POSTGRES_PASSWORD: 'postgres'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      NODE_ENV: test
      PORT: 7778
      DB_USER: dream
      DB_NAME: dream_core_test
      DB_HOST: localhost
      REPLICA_DB_NAME: dream_core_test
      REPLICA_DB_HOST: localhost
      DB_PASSWORD: postgres
      DB_PORT: 5432
      TZ: UTC
      YARN_CACHE_FOLDER: ~/.yarn-cache
      DREAM_PARALLEL_TESTS: 4

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm install -g corepack
      - run: corepack enable

      - run: "echo \"nodeLinker: node-modules\" > ./.yarnrc.yml"
      - run: "echo -e \"npmScopes:\" >> ./.yarnrc.yml"
      - run: "echo -e \"  rvohealth:\" >> ./.yarnrc.yml"
      - run: "echo -e \"    npmAuthToken: '${{ secrets.GITHUB_TOKEN }}'\" >> ./.yarnrc.yml"
      - run: "echo -e \"    npmRegistryServer: 'https://npm.pkg.github.com'\" >> ./.yarnrc.yml"

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: ~/.yarn-cache
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/yarn.lock') }}

      - if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: yarn list

      - run: yarn install --immutable
      - run: APP_ROOT_PATH=$(pwd) yarn dream db:migrate --skip-sync
      - run: yarn spec


